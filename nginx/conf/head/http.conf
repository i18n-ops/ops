map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

aio on;
quic_gso on;
quic_retry on;
directio 4m;
http2 on;
server_names_hash_max_size 512;
server_names_hash_bucket_size 128;
proxy_temp_path /cache/nginx/proxy_temp;
proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
proxy_cache_valid 200 304 302 99y;
proxy_buffering on;
proxy_cache_valid 404 1m;
proxy_cache_revalidate on;
proxy_cache_lock on;
proxy_cache_key  "$uri";
lua_package_path "/usr/local/lib/lua/?.lua;;";

charset   utf-8;

access_log /var/log/nginx/access.log global_main;
error_log /var/log/nginx/error.log error;

brotli on;
brotli_buffers 16 16k;
brotli_comp_level 6;
brotli_min_length 64;
brotli_static on;
brotli_types text/js text/x-script text/css text/xml text/javascript text/json text/markdown image/svg+xml image/x-icon;

gzip_proxied    any;
gzip  on;
gzip_buffers     4 16k;
gzip_comp_level 9;
gzip_http_version 1.1;
gzip_min_length  64;
gzip_static on;
gzip_types text/js text/x-script text/css text/xml text/javascript text/json text/markdown image/svg+xml image/x-icon;
gzip_vary on;

# 设置连接超时秒数
keepalive_timeout 65;

server_tokens off;

# 开启 sendfile, 指定Nginx调用内核级的 sendfile 函数以提高web传输文件的效率
sendfile        on;

# https://ssl-config.mozilla.org

ssl_ciphers ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-CCM:DHE-RSA-AES256-CCM8:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-CCM:DHE-RSA-AES128-CCM8:DHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256;
ssl_early_data on;
ssl_prefer_server_ciphers on;
ssl_protocols TLSv1.2 TLSv1.3;
ssl_session_cache shared:MozSSL:10m;
ssl_session_tickets off;
ssl_session_timeout 1d;
ssl_stapling on;
ssl_stapling_verify on;

# 同时开启 tcp_nopush，将响应请求的http头信息压入一个数据包后发出。参考 http://wiki.nginx.org/ReadMoreAboutTcpNopush
tcp_nopush      on;

# 关闭tcp_nodelay，以便将多个数据集合（例如HTTP响应的头和正文）一并发送。参考 http://wiki.nginx.org/ReadMoreAboutTcpNodelay
tcp_nodelay     off;


types_hash_max_size 2048;

include       head/mime.types;

more_clear_headers Server;


# 返回444（Nginx定义的非标准状态码，用于指示Nginx程序关闭连接不响应该请求）
# server_name _;中的_为无效名称，不匹配任何实际的名称

server {
  listen      80 default_server reuseport;
  listen      [::]:80 default_server reuseport;
  server_name _;
  rewrite ^(.+) https://$host$1 permanent;
}

server {
  listen 443 ssl reuseport;
  listen [::]:443 ssl reuseport;
  listen 443 quic reuseport;
  listen [::]:443 quic reuseport;

  ssl_certificate /etc/nginx/.cer;
  ssl_certificate_key /etc/nginx/.key;

  location / {
      return 444;  # 返回非标准响应码 444 表示关闭连接
  }
}

include /etc/nginx/site/*.conf;
